alias sys_call R0;
alias userSP R1;
userSP = SP;
sys_call = [([PTBR + 2 * ((userSP-5)/512)] * 512) + ((userSP-5) % 512)];
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = sys_call;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;

if(sys_call == 11) then
    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
    [([PTBR + 2 * ((userSP-1)/512)] * 512) + ((userSP-1) % 512)] = [SYSTEM_STATUS_TABLE + 1];
endif;

if(sys_call == 12) then
    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
    [([PTBR + 2 * ((userSP-1)/512)] * 512) + ((userSP-1) % 512)] = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 2];
endif;

if(sys_call == 13) then
    alias pid R2;
    pid = [([PTBR + 2 * ((userSP - 4)/512)] * 512) + ((userSP - 4) % 512)];
    if((pid < 0) && (pid > 16)) then
        [([PTBR + 2 * ((userSP-1)/512)] * 512) + ((userSP-1) % 512)] = -1;
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
        SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
        ireturn;
    endif;

    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 4] = WAIT_PROCESS;
    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 5] = pid;

    multipush(R0,R1,R2,R3,R4,R5,R6,R7);
    call MOD_5;
    multipop(R0,R1,R2,R3,R4,R5,R6,R7);

    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
    [([PTBR + 2 * ((userSP-1)/512)] * 512) + ((userSP-1) % 512)] = 0;
endif;

if(sys_call == 14) then
    alias i R3;
    i = 1;
    while(i < 16) do
        if(([PROCESS_TABLE + (i * 16) + 4] == WAIT_PROCESS) && ([PROCESS_TABLE + (i * 16) + 5] == [SYSTEM_STATUS_TABLE + 1])) then
            [PROCESS_TABLE + (i * 16) + 4] = READY;
        endif;
        i = i + 1;
    endwhile;
    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
    [([PTBR + 2 * ((userSP-1)/512)] * 512) + ((userSP-1) % 512)] = 0;
endif;

SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
ireturn;