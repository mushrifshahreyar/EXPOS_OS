type
List {
    int data;
    List next;
}
endtype
            
decl
    List head;
    int x, pid, temp, length;
enddecl
            
int main()
{
decl
    List p, q;
    int i;
enddecl
            
begin

    temp = exposcall("Heapset");
    head = null;
    q = head;

    length=1;
    while (length <= 50)  do
        p = exposcall("Alloc",2);
        temp = exposcall("Read",-1,i);
        if(i == 0) then
            break;
        endif;
        p.data = i;
        p.next = null;
        
        if (head == null) then
            head = p;
            q = p;
        else
            q.next = p;
            q = q.next;
        endif;
                          
        length = length+1;
    endwhile;
    pid = exposcall("Fork");
    if(pid == 0) then
        p = head;
        while(p != null)  do
            x = p.data;
            temp = exposcall("Write",-2,x);
            p = p.next;
        endwhile;
        temp = exposcall("Signal");
    endif;
    temp = exposcall("Wait",pid);        
    return 0;
end
}