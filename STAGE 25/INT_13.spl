alias userSP R0;
alias sys_call R1;
userSP = SP;
sys_call = [([PTBR + 2 * ((userSP - 5)/512)] * 512) + ((userSP - 5) % 512)];
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = sys_call;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;

SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;

//Semget
if(sys_call == 17) then
    alias i R2;
    alias per_process_table R3;
    per_process_table = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 + 495;
    i = 0;
    while(i<8) do
        if([per_process_table + (i * 2)] == -1) then
            break;
        endif;
        i = i + 1;
    endwhile;

    if(i == 8) then
        [([PTBR + 2 * ((userSP - 1)/512)] * 512) + ((userSP - 1) % 512)] = -1;
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
        SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
        ireturn;
    endif;

    multipush(R0,R1,R2,R3,R4,R5,R6,R7);
        R1 = 6;
        R2 = [SYSTEM_STATUS_TABLE + 1];
        call MOD_0;

        R10 = R0;
    multipop(R0,R1,R2,R3,R4,R5,R6,R7);
    if(R10 == -1) then
        [([PTBR + 2 * ((userSP - 1)/512)] * 512) + ((userSP - 1) % 512)] = -2;
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
        SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
        ireturn;
    endif;
    [per_process_table + (i * 2)] = 1;
    [per_process_table + (i * 2) + 1] = R10;
    [([PTBR + 2 * ((userSP - 1)/512)] * 512) + ((userSP - 1) % 512)] = i;


endif;

if(sys_call == 18) then
    alias semid R2;
    semid = [([PTBR + 2 * ((userSP - 4)/512)] * 512) + ((userSP - 4) % 512)];
    if((semid >= 8) || (semid < 0)) then
        [([PTBR + 2 * ((userSP - 1)/512)] * 512) + ((userSP - 1) % 512)] = -1;
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
        SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
        ireturn;
    endif;
    alias per_process_table R3;
    per_process_table = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 + 495;
    if([per_process_table + (semid * 2)] != 1) then
        [([PTBR + 2 * ((userSP - 1)/512)] * 512) + ((userSP - 1) % 512)] = -1;
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
        SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
        ireturn;
    endif;


    multipush(R0,R1,R2,R3,R4,R5,R6,R7);
        R1 = 7;
        R2 = [SYSTEM_STATUS_TABLE + 1];
        R3 = [per_process_table + (semid * 2) + 1];
        call MOD_0;
    multipop(R0,R1,R2,R3,R4,R5,R6,R7);

    [per_process_table + (semid * 2)] = -1;
    [per_process_table + (semid * 2) + 1] = -1;
    [([PTBR + 2 * ((userSP - 1)/512)] * 512) + ((userSP - 1) % 512)] = 0;
endif;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
ireturn;