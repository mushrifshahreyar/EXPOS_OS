alias functionno R1;
alias currPID R2;
alias retValue R0;
if(functionno == 3) then
    while([DISK_STATUS_TABLE + 0] == 1) do
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] *  16) + 4] = WAIT_DISK;
        multipush(R0,R1,R2,R3,R4,R5,R6,R7);
        call MOD_5;
        multipop(R0,R1,R2,R3,R4,R5,R6,R7);

        [DISK_STATUS_TABLE + 0] = 1;
        [DISK_STATUS_TABLE + 4] = currPID;
    endwhile;

    return;
endif;
if(functionno == 8) then
    while([TERMINAL_STATUS_TABLE + 0] == 1) do
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 4] = WAIT_TERMINAL;
        multipush(R0,R1,R2,R3,R4,R5,R6,R7);
        call MOD_5;
        multipop(R0,R1,R2,R3,R4,R5,R6,R7);
    endwhile;

    [TERMINAL_STATUS_TABLE + 0] = 1;
    [TERMINAL_STATUS_TABLE + 1] = currPID;
    return;
endif;
if(functionno == 9) then
    if(currPID == [TERMINAL_STATUS_TABLE + 1]) then
        [TERMINAL_STATUS_TABLE + 0] = 0;
        alias i R7;
        i = 0;
        while(i < 16) do
            if([PROCESS_TABLE + (i * 16) + 4] == WAIT_TERMINAL) then
                [PROCESS_TABLE + (i * 16) + 4] = READY;
            endif;
            i = i + 1;
        endwhile;
        retValue = 0;
        return;
    else 
        retValue = -1;
        return;
    endif;
endif;