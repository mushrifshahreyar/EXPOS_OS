alias userSP R0;
alias sys_call R1;
alias pcb R2;
alias retAddr R3;
userSP = SP;
pcb = PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16);
retAddr = ([PTBR + 2 * ((userSP - 1)/512)] * 512) + ((userSP - 1) % 512);
sys_call = [([PTBR + 2 * ((userSP - 5)/512)] * 512) + ((userSP - 5) % 512)];
[pcb + 9] = sys_call;
[pcb + 13] = SP;


SP = [pcb + 11] * 512 - 1;

if([SYSTEM_STATUS_TABLE + 1] != 1) then
    [pcb + 9] = 0;
    SP = [pcb + 13];
    [retAddr] = -2;
    ireturn;
endif;

if(sys_call == 27) then

    alias username R4;
    alias password R5;
    username = [([PTBR + 2 * ((userSP - 4)/512)] * 512) + ((userSP - 4) % 512)];
    password = [([PTBR + 2 * ((userSP - 3)/512)] * 512) + ((userSP - 3) % 512)];

    alias i R10;
    i = 0;
    while(i < 16) do
        if([USER_TABLE + (i * 2) + 0] == username) then
            break;
        endif;
        i = i + 1;
    endwhile;

    if(i == 16) then
        [pcb + 9] = 0;
        SP = [pcb + 13];
        [retAddr] = -1;
        ireturn;
    endif;

    encrypt password;

    if(password != [USER_TABLE + (i * 2) + 1]) then
        [pcb + 9] = 0;
        SP = [pcb + 13];
        [retAddr] = -1;
        ireturn;
    endif;

    [PROCESS_TABLE + (2 * 16) + 4] = CREATED;
    [PROCESS_TABLE + (2 * 16) + 3] = i;

    [pcb + 4] = WAIT_PROCESS;
    [pcb + 5] = 2;

    [SYSTEM_STATUS_TABLE + 0] = i;
    
    multipush(R0,R1,R2,R3,R4,R5,R10);
        call MOD_5;
    multipop(R0,R1,R2,R3,R4,R5,R10);
    [retAddr] = 0;
endif;

[pcb + 9] = 0;
SP = [pcb + 13];
ireturn;