alias userSP R0;
userSP = SP;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 21;

if([SYSTEM_STATUS_TABLE + 1] != 1 || [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 3] != 1) then
    [([PTBR + 2 * ((userSP - 1)/ 512)] * 512) + ((userSP -1) % 512)] = -1;
    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
    SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
    ireturn;
endif;

multipush(R0,R1);
    R1 = 5;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    call MOD_1;
multipop(R0,R1);

alias i R10;
i = 0;
while(i < 4) do
    if([BUFFER_TABLE + (i * 4) + 0] != -1) then
        if([BUFFER_TABLE + (i * 4) + 1] == 1) then
            multipush(R0,R10);
                R1 = 1;
                R2 = [SYSTEM_STATUS_TABLE + 1];
                R3 = (70 + i);
                R4 = [BUFFER_TABLE + (i * 4) + 0];
                call MOD_4;
            multipop(R0,R10);
        endif;
    endif;
    i = i + 1;
endwhile;

//Inode Table with User table
multipush(R0,R1);
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 59;
R4 = 3;
call MOD_4;
multipop(R0,R1);

multipush(R0,R1);
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 60;
R4 = 4;
call MOD_4;
multipop(R0,R1);

//Root file
multipush(R0,R1);
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 62;
R4 = 5;
call MOD_4;
multipop(R0,R1);

//Disk Free List
multipush(R0,R1);
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 61;
R4 = 2;
call MOD_4;
multipop(R0,R1);

halt;